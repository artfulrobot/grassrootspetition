<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from grassrootspetition/xml/schema/CRM/Grassrootspetition/GrassrootsPetitionCampaign.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:5fbe9810f25090ca3e871a77ea4e0c8c)
 */
use CRM_Grassrootspetition_ExtensionUtil as E;

/**
 * Database access object for the GrassrootsPetitionCampaign entity.
 */
class CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_grpet_campaign';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique GrassrootsPetitionCampaign ID
   *
   * @var int
   */
  public $id;

  /**
   * Administrative name
   *
   * @var string
   */
  public $name;

  /**
   * Public name
   *
   * @var string
   */
  public $label;

  /**
   * Describes the campaign
   *
   * @var longtext
   */
  public $description;

  /**
   * Whether to allow these petitions
   *
   * @var bool
   */
  public $is_active;

  /**
   * URL path component shared by this campaign's petitions
   *
   * @var string
   */
  public $slug;

  /**
   * HTML template for the 'What' of new petitions
   *
   * @var longtext
   */
  public $template_what;

  /**
   * HTML template for the 'Why' of new petitions
   *
   * @var longtext
   */
  public $template_why;

  /**
   * HTML template for the title of new petitions
   *
   * @var string
   */
  public $template_title;

  /**
   * FK to Contact to notify about new petitions
   *
   * @var int
   */
  public $notify_contact_id;

  /**
   * Email address to notify about new petitions
   *
   * @var string
   */
  public $notify_email;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_grpet_campaign';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Grassroots Petition Campaigns') : E::ts('Grassroots Petition Campaign');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'notify_contact_id', 'civicrm_contact', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('Unique GrassrootsPetitionCampaign ID'),
          'required' => TRUE,
          'where' => 'civicrm_grpet_campaign.id',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'name' => [
          'name' => 'name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Name'),
          'description' => E::ts('Administrative name'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_grpet_campaign.name',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'add' => NULL,
        ],
        'label' => [
          'name' => 'label',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Label'),
          'description' => E::ts('Public name'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_grpet_campaign.label',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'add' => NULL,
        ],
        'description' => [
          'name' => 'description',
          'type' => CRM_Utils_Type::T_LONGTEXT,
          'title' => E::ts('Description'),
          'description' => E::ts('Describes the campaign'),
          'where' => 'civicrm_grpet_campaign.description',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'add' => NULL,
        ],
        'is_active' => [
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'description' => E::ts('Whether to allow these petitions'),
          'where' => 'civicrm_grpet_campaign.is_active',
          'default' => '1',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'add' => NULL,
        ],
        'slug' => [
          'name' => 'slug',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Slug'),
          'description' => E::ts('URL path component shared by this campaign\'s petitions'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_grpet_campaign.slug',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'add' => NULL,
        ],
        'template_what' => [
          'name' => 'template_what',
          'type' => CRM_Utils_Type::T_LONGTEXT,
          'title' => E::ts('Template What'),
          'description' => E::ts('HTML template for the \'What\' of new petitions'),
          'where' => 'civicrm_grpet_campaign.template_what',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'add' => NULL,
        ],
        'template_why' => [
          'name' => 'template_why',
          'type' => CRM_Utils_Type::T_LONGTEXT,
          'title' => E::ts('Template Why'),
          'description' => E::ts('HTML template for the \'Why\' of new petitions'),
          'where' => 'civicrm_grpet_campaign.template_why',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'add' => NULL,
        ],
        'template_title' => [
          'name' => 'template_title',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Template Title'),
          'description' => E::ts('HTML template for the title of new petitions'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_grpet_campaign.template_title',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'add' => NULL,
        ],
        'notify_contact_id' => [
          'name' => 'notify_contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('FK to Contact to notify about new petitions'),
          'where' => 'civicrm_grpet_campaign.notify_contact_id',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Contact',
          'add' => NULL,
        ],
        'notify_email' => [
          'name' => 'notify_email',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Notify Email'),
          'description' => E::ts('Email address to notify about new petitions'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_grpet_campaign.notify_email',
          'table_name' => 'civicrm_grpet_campaign',
          'entity' => 'GrassrootsPetitionCampaign',
          'bao' => 'CRM_Grassrootspetition_DAO_GrassrootsPetitionCampaign',
          'localizable' => 0,
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'grpet_campaign', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'grpet_campaign', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
